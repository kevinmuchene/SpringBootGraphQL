#ALWAYS START WITH SCHEMA---> SCHEMA BASED

type Competition {
    id: ID!
    name: String!
    price: Float!
    country: String!
    numberOfTeams: Int!
    teams: [Team]
}

input CompetitionInput {
    name: String!
    price: Float!
    country: String!
    numberOfTeams: Int!
}

input AddTeamToCompetitionInput {
    competitionId: ID!
    teamId: ID!
}

type Team {
    id: ID!
    name: String!
    nickname: String!
    stadium: String!
    city: String!
    players: [Player]
    competitions: [Competition]
}

input TeamInput {
    name: String!
    nickname: String!
    stadium: String!
    city: String!
}

type Player {
    id: ID!
    name: String!
    age: Int!
    playPosition: String!
    team: Team!
}

input PlayerInput{
    name: String!
    age: Int!
    playPosition: String!
}

type Query {
    competitions: [Competition]!
    competitionById(id: ID): Competition
    teams: [Team]!
    teamById(id: ID): Team
    players: [Player]!
    playerById(id: ID): Player
}

input CreatePlayerInput{
    player: PlayerInput!
    teamId: ID!
}

type Mutation{
    createPlayer(input: CreatePlayerInput) : Player!
    createTeam(input: TeamInput): Team!
    createCompetition(input: CompetitionInput): Competition!
    addTeamToCompetition(input: AddTeamToCompetitionInput): Competition!
}

